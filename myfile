import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.ArrayList;
import java.util.Iterator;

import org.apache.poi.ss.usermodel.Cell;
import org.apache.poi.ss.usermodel.CellType;
import org.apache.poi.ss.usermodel.Row;
import org.apache.poi.ss.util.NumberToTextConverter;
import org.apache.poi.xssf.usermodel.XSSFSheet;
import org.apache.poi.xssf.usermodel.XSSFWorkbook;

public class dataDriven {
	
	//Identify Testcases coloum by scanning the entire 1st row
	//once coloumn is identified then scan entire testcase coloum to identify purcjhase testcase row
	//after you grab purchase testcase row = pull all the data of that row and feed into test
	
	public ArrayList<String> getData(String testcaseName) throws IOException
	{
		//fileInputStream argument
				ArrayList<String> a=new ArrayList<String>();
				
				FileInputStream fis=new FileInputStream("C://Users//Gurpreet//Desktop//mydata.xlsx");
				XSSFWorkbook workbook=new XSSFWorkbook(fis);
				
				int sheets=workbook.getNumberOfSheets();
				for(int i=0;i<sheets;i++)
				{
					if(workbook.getSheetName(i).equalsIgnoreCase("testdata"))
							{
					XSSFSheet sheet=workbook.getSheetAt(i);
					//Identify Testcases coloum by scanning the entire 1st row
					
					 Iterator<Row>  rows= sheet.iterator();// sheet is collection of rows
					Row firstrow= rows.next();
					Iterator<Cell> ce=firstrow.cellIterator();//row is collection of cells
					int k=0;
					int coloumn = 0;
				while(ce.hasNext())
				{
					Cell value=ce.next();
					
					if(value.getStringCellValue().equalsIgnoreCase("TestCases"))
					{
						coloumn=k;
						
					}
					
					k++;
				}
				System.out.println(coloumn);
				
				////once coloumn is identified then scan entire testcase coloum to identify purcjhase testcase row
				while(rows.hasNext())
				{
					
					Row r=rows.next();
					
					if(r.getCell(coloumn).getStringCellValue().equalsIgnoreCase(testcaseName))
					{
						
						////after you grab purchase testcase row = pull all the data of that row and feed into test
						
						Iterator<Cell>  cv=r.cellIterator();
						while(cv.hasNext())
						{
						Cell c=	cv.next();
						if(c.getCellTypeEnum()==CellType.STRING)
						{
							
						a.add(c.getStringCellValue());
						}
						else{
							
							a.add(NumberToTextConverter.toText(c.getNumericCellValue()));
						
						}
						}
					}
					
				
				}
			
				
					
					
					
					
					
					
					
							}
				}
				return a;
				
	}

	public static void main(String[] args) throws IOException {
		// TODO Auto-generated method stub

		
	}

}
import java.io.File;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;

import org.testng.Assert;
import org.testng.annotations.Test;

public class testSample {

	//public static void main(String[] args) throws IOException {
	@Test
	public void Test1() throws IOException{
		// TODO Auto-generated method stub
    copyFile c=new copyFile();
    c.newfile();
    System.out.println("New file created");
		
	dataDriven d=new dataDriven();
	ArrayList data=d.getData("Purchase");
	

	System.out.println(data.get(4));
	
  
    String Path=createFile.createFileName();
    editFile.modifyFile(Path,"TransNum",data.get(4).toString());
    System.out.println("Transaction number replaced");


    int expectedSuccessCount=4;
   int countSuccess= Verifyfile2.countword();
   
    
    Assert.assertEquals(countSuccess, expectedSuccessCount);
    
	
		
	}

}



	// Java program to illustrate the 
	// delimiter() method of Scanner class in Java 
	  
import java.io.BufferedReader;
import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.util.*;



import java.io.FileReader; 
public class editFile {
	  
	
		
		static void modifyFile(String filePath, String oldString, String newString)
		    {
		        File fileToBeModified = new File(filePath);
		         
		        String oldContent = "";
		         
		        BufferedReader reader = null;
		         
		        FileWriter writer = null;
		         
		        try
		        {
		            reader = new BufferedReader(new FileReader(fileToBeModified));
		             
		            //Reading all the lines of input text file into oldContent
		             
		            String line = reader.readLine();
		             
		            while (line != null) 
		            {
		                oldContent = oldContent + line + System.lineSeparator();
		                 
		                line = reader.readLine();
		            }
		             
		            //Replacing oldString with newString in the oldContent
		             
		            String newContent = oldContent.replaceAll(oldString, newString);
		             
		            //Rewriting the input text file with newContent
		             
		            writer = new FileWriter(fileToBeModified);
		             
		            writer.write(newContent);
		        }
		        catch (IOException e)
		        {
		            e.printStackTrace();
		        }
		        finally
		        {
		            try
		            {
		                //Closing the resources
		                 
		                reader.close();
		                 
		                writer.close();
		            } 
		            catch (IOException e) 
		            {
		                e.printStackTrace();
		            }
		        }
		    }
		     
		   public static void main(String[] args)
		    {
		        modifyFile("C:\\Users\\Gurpreet\\Desktop\\guru.txt", "Guru","Ram" );
		         
		        System.out.println("done");
		    }
	} 




    import java.io.File;
	import java.io.FileInputStream;
	import java.io.FileOutputStream;
	import java.io.IOException;
	public class copyFile {
		
		
		
	
	   static void newfile(){
		   {	
			   createFile cf=new createFile();
			   String filename=cf.createFileName();
		    	FileInputStream instream = null;
			FileOutputStream outstream = null;
		 
		    	try{
		    	    File infile =new File("C:\\Users\\Gurpreet\\Desktop\\guru.txt");
		    	//  File outfile =new File("C:\\Users\\Gurpreet\\Desktop\\gurunew.txt");
		    	    File outfile =new File(filename);
		 
		    	    instream = new FileInputStream(infile);
		    	    outstream = new FileOutputStream(outfile);
		 
		    	    byte[] buffer = new byte[1024];
		 
		    	    int length;
		    	    /*copying the contents from input stream to
		    	     * output stream using read and write methods
		    	     */
		    	    while ((length = instream.read(buffer)) > 0){
		    	    	outstream.write(buffer, 0, length);
		    	    }

		    	    //Closing the input/output file streams
		    	    instream.close();
		    	    outstream.close();

		    	    System.out.println("Template copied as File name with date template!!");
		 
		    	}catch(IOException ioe){
		    		ioe.printStackTrace();
		    	 }
		    }
	   }
}
import java.io.File;
import java.io.FileNotFoundException;
import java.text.SimpleDateFormat;
import java.util.Date;
import java.util.Scanner;

public class createFile {
	
	static String createFileName(){
	String fileName = new SimpleDateFormat("'C:\\Users\\Gurpreet\\Desktop\\gurunew'yyyyMMddHHmm'.txt'").format(new Date());
  //  System.out.println(fileName);
    System.out.println("File name with date template created");
    return fileName;
}
	
}import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;
import java.util.regex.Pattern;
public class Verifyfile2 {

	// public static void main(String[] args) throws IOException 
	static int countword() throws IOException
	   {
	      File f1=new File("C:\\Users\\Gurpreet\\Desktop\\gurunew.txt"); //Creation of File Descriptor for input file
	      String[] words=null;  //Intialize the word Array
	      FileReader fr = new FileReader(f1);  //Creation of File Reader object
	      BufferedReader br = new BufferedReader(fr); //Creation of BufferedReader object
	      String s;     
	      String input="SUCCESS";   // Input word to be searched
	      int count=0;   //Intialize the word to zero
	      while((s=br.readLine())!=null)   //Reading Content from the file
	      {
	         words=s.split(Pattern.quote("|"));  //Split the word using space
	          for (String word : words) 
	          {
	                 if (word.equals(input))   //Search for the given word
	                 {
	                   count++;    //If Present increase the count by one
	                 }
	          }
	      }
	      if(count!=0)  //Check for count not equal to zero
	      {
	         System.out.println("The given word is present for "+count+ " Times in the file");
	      }
	      else
	      {
	         System.out.println("The given word is not present in the file");
	      }
	      
	         fr.close();
			return count;
	         
	   }


}
